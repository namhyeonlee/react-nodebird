{"ast":null,"code":"var _jsxFileName = \"/Users/namhyeonlee/Documents/frontend/react class/react-nodebird/components/PostCard.js\";\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, Popover, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const id = useSelector(state => state.user.me && state.user.me.id); // const id = useSelector((state) => state.user.me?.id);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 42\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this),\n        title: post.User.nickname,\n        description: post.conetent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 41\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.PropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    conetent: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/namhyeonlee/Documents/frontend/react class/react-nodebird/components/PostCard.js"],"names":["React","useState","useCallback","PropTypes","Button","Card","Popover","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","useSelector","Avatar","PostImages","CommentForm","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","id","state","user","me","Images","images","User","nickname","conetent","Comments","length","item","content","shape","number","object","string","createdAt","arrayOf","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card,Popover, List , Comment} from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone} from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nconst PostCard = ({ post }) => {\n      const [liked, setLiked] = useState(false);\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n    const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n    }, []);\n    \n      const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n      }, []);\n    \n    const id = useSelector((state) => state.user.me && state.user.me.id);\n    // const id = useSelector((state) => state.user.me?.id);\n\n\n    \n    return (\n        <div>\n            <Card\n                cover={post.Images[0] && <PostImages images={post.images} />}\n                actions={[\n                    <RetweetOutlined key=\"retweet\" />,\n                    liked ? < HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n                        : < HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n                    <MessageOutlined key=\"comment\" onClick={ onToggleComment }/>,\n                    <Popover key=\"more\"\n                        content={(\n                            <Button.Group>\n                                {id && post.User.id === id? (\n                                <>\n                                <Button>수정</Button>\n                                <Button type=\"danger\">삭제</Button>\n                                </>\n                                ):<Button>신고</Button>}\n                                \n                            </Button.Group>\n                        )}\n                    >\n                        <EllipsisOutlined />\n                    </Popover>\n                    \n\n                ]}\n            >\n                <Card.Meta\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={post.conetent}\n                />\n            </Card>\n            {commentFormOpened &&\n                (<div>\n                <CommentForm post={post} />\n                <List\n                    header={`${post.Comments.length}개의 댓글`}\n                    itemLayout=\"horizontal\"\n                    dataSource={post.Comments}\n                    renderItem={(item) => (\n                        <li>\n                            <Comment\n                                author={item.User.nickname}\n                                avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                                content={item.content}\n                            />\n                        </li>\n                    )}\n                />\n\n                </div>)}\n            {/* <CommentForm />\n            <Contents/> */}\n        </div>\n    )\n}\n\nPostCard.PropTypes = {\n    post: PropTypes.shape({\n        id: PropTypes.number,\n        User: PropTypes.object,\n        conetent: PropTypes.string,\n        createdAt: PropTypes.object,\n        Comments: PropTypes.arrayOf(PropTypes.any),\n        Images: PropTypes.arrayOf(PropTypes.any),\n    }).isRequired,\n}\nexport default PostCard;\n\n"]},"metadata":{},"sourceType":"module"}
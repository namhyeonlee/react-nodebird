{"ast":null,"code":"var _jsxFileName = \"/Users/namhyeonlee/Documents/frontend/react class/react-nodebird/components/CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useState = useState(''),\n      commentText = _useState[0],\n      setCommentText = _useState[1];\n\n  var onsubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    setCommentText(e.target.value);\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onsubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onsubmitComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"LOWOMwNj8P8qmc92h17ZoXL34JQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/namhyeonlee/Documents/frontend/react class/react-nodebird/components/CommentForm.js"],"names":["Form","Input","Button","React","useCallback","useState","useInput","PropTypes","useSelector","CommentForm","post","id","state","user","me","commentText","setCommentText","onsubmitComment","console","log","e","target","value","propTypes","object","isRequired"],"mappings":";;;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9B,MAAMC,EAAE,GAAGH,WAAW,CAAC,UAACI,KAAD,EAAS;AAAA;;AAAC,sBAAAA,KAAK,CAACC,IAAN,CAAWC,EAAX,kEAAeH,EAAf;AAAkB,GAA7B,CAAtB;;AAD8B,kBAESN,QAAQ,CAAC,EAAD,CAFjB;AAAA,MAEtBU,WAFsB;AAAA,MAETC,cAFS;;AAG9B,MAAMC,eAAe,GAAGb,WAAW,CAAC,YAAM;AACtCc,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,EAAjB,EAAqBI,WAArB;AACAC,IAAAA,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAEH,GAJkC,EAIhC,CAACP,WAAD,CAJgC,CAAnC;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEF,WAAvB;AAAoC,QAAA,QAAQ,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,CAjBD;;GAAMR,W;UACSD,W;;;KADTC,W;AAmBNA,WAAW,CAACc,SAAZ,GAAwB;AACtBb,EAAAA,IAAI,EAAEH,SAAS,CAACiB,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAehB,WAAf","sourcesContent":["import { Form, Input, Button } from 'antd';\nimport React, { useCallback, useState} from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nconst CommentForm = ({ post }) => {\n    const id = useSelector((state)=>{state.user.me?.id})\n     const [commentText, setCommentText] = useState('');\n    const onsubmitComment = useCallback(() => {\n        console.log(post.id, commentText);\n        setCommentText(e.target.value);\n        \n    }, [commentText]);\n    return (\n        <Form onFinish={onsubmitComment}>\n            <Form.Item>\n                <Input.TextArea value={commentText} onChange={onsubmitComment} />\n                <Button type=\"primary\" htmlType=\"submit\"></Button>\n            </Form.Item>\n        </Form>\n        \n    );\n}\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}
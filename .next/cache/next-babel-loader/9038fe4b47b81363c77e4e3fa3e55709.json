{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nvar initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    LoginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n}; //action creator\n\nexport var loginAction = function loginAction(data) {\n  return {\n    type: 'LOG_IN',\n    data: data\n  };\n};\nexport var logoutAction = function logoutAction(data) {\n  return {\n    type: 'LOG_OUT'\n  };\n}; //store.dispatch(changeNickname('dddd'))\n//(이전상태, 액션) => 다음상태\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/namhyeonlee/Documents/frontend/react class/react-nodebird/reducers/index.js"],"names":["HYDRATE","initialState","user","isLoggedIn","signUpData","LoginData","post","mainPosts","loginAction","data","type","logoutAction","rootReducer","state","action","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,KADV;AAEFD,IAAAA,IAAI,EAAE,IAFJ;AAGFE,IAAAA,UAAU,EAAE,EAHV;AAIFC,IAAAA,SAAS,EAAC;AAJR,GADW;AAOjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAC;AADR;AAPW,CAArB,C,CAaA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAE,QADH;AAEHD,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAKH,CANM;AAQP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACF,IAAD,EAAU;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAIH,CALM,C,CAMP;AAEA;;AACA,IAAME,WAAW,GAAI,SAAfA,WAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBZ,YAAyB;AAAA,MAAXa,MAAW;;AAEnD,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKV,OAAL;AACI,6CACOa,KADP,GAEOC,MAAM,CAACC,OAFd;;AAIJ,SAAK,QAAL;AACI,6CACOF,KADP;AAEIX,QAAAA,IAAI,kCACGW,KAAK,CAACX,IADT;AAEAC,UAAAA,UAAU,EAAE,IAFZ;AAGAD,UAAAA,IAAI,EAACY,MAAM,CAACL;AAHZ;AAFR;;AASJ,SAAK,SAAL;AACI,6CACOI,KADP;AAEIX,QAAAA,IAAI,kCACGW,KAAK,CAACX,IADT;AAEAC,UAAAA,UAAU,EAAE,KAFZ;AAGAD,UAAAA,IAAI,EAAC;AAHL;AAFR;AAjBR;AA4BH,CA9BD;;AAgCA,eAAeU,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\n\nconst initialState = {\n    user: {\n        isLoggedIn: false,\n        user: null,\n        signUpData: {},\n        LoginData:{}\n    },\n    post: {\n        mainPosts:[],\n    }\n}\n\n\n//action creator\nexport const loginAction = (data) => {\n    return {\n        type: 'LOG_IN',\n        data  \n    }\n\n}\n\nexport const logoutAction = (data) => {\n    return {\n        type: 'LOG_OUT',\n    }\n\n}\n//store.dispatch(changeNickname('dddd'))\n\n//(이전상태, 액션) => 다음상태\nconst rootReducer = ((state = initialState, action) => {\n\n    switch (action.type) {\n        case HYDRATE:\n            return {\n                ...state,\n                ...action.payload\n            };\n        case 'LOG_IN':\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isLoggedIn: true,\n                    user:action.data\n                    \n                }\n            }\n        case 'LOG_OUT':\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isLoggedIn: false,\n                    user:null,\n                    \n                }\n            }\n        \n    }\n});\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}